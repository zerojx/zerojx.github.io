<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[题解 P1767 【家族_NOI导刊2010普及（10）】]]></title>
    <url>%2F2019%2F10%2F16%2F%E9%A2%98%E8%A7%A3%20P1767%E3%80%90%E5%AE%B6%E6%97%8F-NOI%E5%AF%BC%E5%88%8A2010%E6%99%AE%E5%8F%8A%EF%BC%8810%EF%BC%89%E3%80%91%2F</url>
    <content type="text"><![CDATA[蒟蒻第一次发题解呢。 一道挺水的搜索题。 难的地方要把它转为二维，再进行dfs。也有点像连通。 贴上AC代码(蒟蒻第一绿) #include&lt;iostream&gt; #include&lt;fstream&gt; using namespace std; int n,l[205],f,p,ans,f1,vis[205][205]; string s; char st[205][205]; void dfs(int x,int y) { if (st[x][y]&lt;&apos;a&apos;||st[x][y]&gt;&apos;z&apos;) return;//边界值判断 if (vis[x][y]) return;//有标记则退出 vis[x][y]=1;//做标记 dfs(x+1,y);//四个方向搜索 dfs(x-1,y); dfs(x,y+1); dfs(x,y-1); } int main() { cin&gt;&gt;n; for (int i=0; i&lt;=n; i++) { getline(cin,s); //字符串读入 l[i]=s.size();//存入每行长度 if (i==0) continue; for (int j=0; j&lt;l[i]; j++) { st[i][j]=s[j]; } } for (int i=1; i&lt;=n; i++) for (int j=0; j&lt;l[i]; j++) { if (st[i][j]&gt;=&apos;a&apos;&amp;&amp;st[i][j]&lt;=&apos;z&apos;&amp;&amp;!vis[i][j])//判断是否是字母并未搜过 { ans++;//统计答案 dfs(i,j); } } cout&lt;&lt;ans; return 0;//The end }]]></content>
  </entry>
  <entry>
    <title><![CDATA[第二次调试]]></title>
    <url>%2F2019%2F10%2F09%2F%E7%AC%AC%E4%BA%8C%E6%AC%A1%E8%B0%83%E8%AF%95%2F</url>
    <content type="text"><![CDATA[第二次调试。。。。。。。。。]]></content>
  </entry>
</search>
